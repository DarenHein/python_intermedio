La programación funcional es un paradigma de programación que se centra en tratar las operaciones de programación como evaluaciones de funciones matemáticas y evitar cambiar el estado y los datos. Aquí hay algunos conceptos clave que debes aprender en la programación funcional:

1. **Funciones Puras:** Las funciones puras son funciones que siempre producen el mismo resultado para los mismos argumentos y no tienen efectos secundarios. No modifican datos fuera de su alcance.

2. **Inmutabilidad:** En la programación funcional, los datos son inmutables, lo que significa que no se pueden cambiar una vez que se crean. Si necesitas cambiar un valor, creas uno nuevo.

3. **Recursión:** En lugar de usar bucles, la programación funcional favorece la recursión para resolver problemas.

4. **First-Class y Higher-Order Functions:** En la programación funcional, las funciones son tratadas como valores de primera clase. Esto significa que puedes pasar funciones como argumentos a otras funciones y devolver funciones como resultados. Las funciones que toman otras funciones como argumentos o devuelven funciones se llaman funciones de orden superior.

5. **Clausuras:** Las clausuras permiten que las funciones capturen y retengan el contexto en el que fueron creadas.

6. **Funciones Anónimas (Lambda):** Las funciones lambda son funciones pequeñas y anónimas que se pueden usar en línea.

7. **Map, Filter y Reduce:** Estas son funciones de orden superior utilizadas en la programación funcional para transformar y procesar colecciones de datos.
   
8. **Composición de Funciones:** La composición de funciones implica combinar dos o más funciones para crear una nueva función.

9. **Currying y Parcialización:** El currying y la parcialización son técnicas para crear nuevas funciones a partir de funciones existentes, permitiendo que puedas pasar argumentos en partes.

10. **Monads (Concepto avanzado):** Los monads son una estructura que ayuda a gestionar efectos secundarios en un estilo funcional y se utilizan en la programación funcional avanzada.

11. **Lazy Evaluation:** Es la evaluación perezosa, donde las operaciones se realizan solo cuando se necesita el resultado.

Estos son algunos de los conceptos clave en la programación funcional. A medida que avanzas, también puedes explorar más sobre tipos de datos inmutables, evaluación diferida y otros conceptos más avanzados. Recuerda que la programación funcional se trata de escribir un código más limpio, modular y comprensible al reducir los efectos secundarios y el estado mutable.